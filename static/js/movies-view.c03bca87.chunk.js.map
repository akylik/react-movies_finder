{"version":3,"sources":["views/MoviesPageView.js","components/Cast.js","components/Reviews.js","views/MovieDetailsView.js"],"names":["MoviesPageView","state","query","queryMovie","movies","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","prevProps","prevState","this","Axios","get","response","data","results","className","onSubmit","type","onChange","autoComplete","autoFocus","placeholder","map","movie","key","id","to","pathname","from","props","location","title","Component","withRouter","Cast","cast","movieId","match","params","cast_id","src","profile_path","name","character","Reviews","reviews","console","log","review","author","content","MovieDetailsView","genres","handleGoBack","history","push","routes","home","res","resG","join","onClick","poster_path","runtime","overview","path","component"],"mappings":"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","file":"static/js/movies-view.c03bca87.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport { NavLink, Route, withRouter } from 'react-router-dom';\r\n\r\nclass MoviesPageView extends Component {\r\n  state = {\r\n    query: '',\r\n    queryMovie: '',\r\n    movies: [],\r\n  };\r\n\r\n  //27afa94f0efefd21cbebfb5074759bcd\r\n\r\n  async componentDidMount() {\r\n    //  const response = await Axios.get(\r\n    //    'https://api.themoviedb.org/3/search/movie?api_key=27afa94f0efefd21cbebfb5074759bcd&query=Jack+Reacher',\r\n    //  );\r\n    //   console.log(response.data);\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.queryMovie !== this.state.queryMovie) {\r\n      const response = await Axios.get(\r\n        `https://api.themoviedb.org/3/search/movie?api_key=27afa94f0efefd21cbebfb5074759bcd&query=${this.state.queryMovie}&page=1&include_adult=false`,\r\n      );\r\n      // console.log(response.data.results);\r\n\r\n      this.setState({ movies: response.data.results });\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    //  this.props.onSubmit(this.state.query);\r\n   //  console.log(this.state.query);\r\n    this.setState({ queryMovie: this.state.query, query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"Searchbar\">\r\n          <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n            <button type=\"submit\" className=\"SearchForm-button\">\r\n              <span className=\"SearchForm-button-label\"></span>\r\n            </button>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.query}\r\n              onChange={this.handleChange}\r\n              className=\"SearchForm-input\"\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search movie\"\r\n            />\r\n          </form>\r\n        </div>\r\n        {this.state.queryMovie && (\r\n          <div>\r\n            <ul>\r\n              {this.state.movies.map(movie => (\r\n                <li key={movie.id}>\r\n                  <NavLink\r\n                    to={{\r\n                      pathname: `/movies/${movie.id}`,\r\n                      state: {from: this.props.location},\r\n                    }}\r\n                  >\r\n                    {movie.title}\r\n                  </NavLink>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MoviesPageView);\r\n","import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    cast: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const response = await Axios.get(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=27afa94f0efefd21cbebfb5074759bcd&language=en-US`,\r\n    );\r\n   //  console.log(response.data.cast);\r\n    this.setState({cast: response.data.cast});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {this.state.cast.map(cast => (\r\n            <li key={cast.cast_id}>\r\n              <div className=\"ProfileContainer\">\r\n                <img\r\n                  src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2${cast.profile_path}`}\r\n                  className=\"ProfileImg\"\r\n                />\r\n                <p>{cast.name}</p>\r\n                <p>Character: {cast.character}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cast;\r\n","import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const response = await Axios.get(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=27afa94f0efefd21cbebfb5074759bcd&language=en-US&page=1`,\r\n      // `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=27afa94f0efefd21cbebfb5074759bcd&language=en-US`,\r\n    );\r\n    console.log(response.data);\r\n     this.setState({ reviews: response.data.results });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {this.state.reviews.map(review => (\r\n            <li key={review.id}>\r\n              <div className=\"ProfileContainer\">\r\n               <h4>{review.author}</h4>\r\n                <p>{review.content}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reviews;\r\n","import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport { NavLink, Route, Switch, withRouter } from 'react-router-dom';\r\nimport routes from '../routes';\r\nimport Cast from '../components/Cast';\r\nimport Reviews from '../components/Reviews';\r\n\r\nclass MovieDetailsView extends Component {\r\n  state = {\r\n    movie: {},\r\n    genres: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const response = await Axios.get(\r\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=27afa94f0efefd21cbebfb5074759bcd&language=en-US`,\r\n    );\r\n    console.log(response);\r\n\r\n    this.setState({ movie: response.data });\r\n\r\n    const res = this.state.movie.genres;\r\n    const resG = res.map(genres => genres.name).join(', ');\r\n\r\n    this.setState({ genres: resG });\r\n  }\r\n\r\n  handleGoBack = () => {\r\n    const { location, history } = this.props;\r\n\r\n    if (location.state && location.state.from) {\r\n      return history.push(location.state.from);\r\n    }\r\n\r\n    history.push(routes.home);\r\n\r\n    // history.push(location?.state?.from || routes.books);\r\n  };\r\n\r\n  render() {\r\n    const { movieId } = this.props.match.params;\r\n    return (\r\n      <div>\r\n        <button type=\"button\" onClick={this.handleGoBack} className=\"NavLink\">\r\n          Вернуться назад\r\n        </button>\r\n        <div className=\"container-fluid\">\r\n          <div>\r\n            <img\r\n              src={`https://www.themoviedb.org/t/p/original${this.state.movie.poster_path}`}\r\n              className=\"Poster__img\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <h3>{this.state.movie.title}</h3>\r\n            <h6>User Score: {this.state.movie.runtime}%</h6>\r\n            <h4>Overview</h4>\r\n            <p>{this.state.movie.overview}</p>\r\n            <h4>Genres</h4>\r\n            <p>{this.state.genres}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Information\">\r\n          <h6>Additional information</h6>\r\n          <ul>\r\n            <li>\r\n              <NavLink to={`/movies/${movieId}/cast`}>Cast</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to={`/movies/${movieId}/reviews`}>Reviews</NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <Switch>\r\n          <Route path={`/movies/:movieId/cast`} component={Cast} />\r\n          <Route path={`/movies/:movieId/reviews`} component={Reviews} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MovieDetailsView);\r\n"],"sourceRoot":""}